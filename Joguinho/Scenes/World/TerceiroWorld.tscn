[gd_scene load_steps=19 format=2]

[ext_resource path="res://Scenes/World/GenericWorld.tscn" type="PackedScene" id=1]
[ext_resource path="res://Scenes/NPCs/Enemies/Enemy.tscn" type="PackedScene" id=2]
[ext_resource path="res://Scenes/NPCs/Girl/Girl.tscn" type="PackedScene" id=3]
[ext_resource path="res://TileMaps/TileMap.tscn" type="PackedScene" id=4]
[ext_resource path="res://Scenes/NPCs/The_Pope/The_Pope.tscn" type="PackedScene" id=5]
[ext_resource path="res://BGM/World3_bgm.wav" type="AudioStream" id=6]
[ext_resource path="res://Scenes/MovingPlatform.tscn" type="PackedScene" id=7]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

const BulletResource = preload(\"res://Scenes/NPCs/Enemies/EnemyBullet.tscn\")

const GRAVITY = 4000.0
const WALK_SPEED = 80.0
const RUN_SPEED = 150.0
const JUMP_FORCE = 1000.0
const GUN_COOLDOWN = 2.0


var horizontalSpeed
var velocity = Vector2()
# 1 = right, -1 = left
var direction = 1
var leftArea
var rightArea
var health = 1
var timeToShoot
var lockedIn = false
var worldNode
var stop = false
var animating = false
var mustReload = false
var aiming = false

func _ready():
    worldNode = get_parent().get_parent()
    horizontalSpeed = WALK_SPEED
    timeToShoot = GUN_COOLDOWN
    $Timer.start()
    $AnimatedSprite.play(\"run\")
    velocity.y = 0
    leftArea = $Left
    rightArea = $Right
    leftArea.set_process(false)
    
func stop():
    stop = true
    $Timer.stop()
    $AnimatedSprite.stop()

func _process(delta):
    if direction == 1:
        $AnimatedSprite.flip_h = false
    elif direction == -1:
        $AnimatedSprite.flip_h = true
        
    if (!stop):
        if lockedIn:
            if timeToShoot <= 0:
                shoot(direction)
        if timeToShoot > 0 && aiming:
            timeToShoot -= delta

func _physics_process(delta):    
    if (!stop && !animating):
        if !is_on_floor():
            velocity.y += delta * GRAVITY
    
        velocity.x = direction * horizontalSpeed
        # Move the character
        move_and_slide(velocity, Vector2(0, -1))

func take_damage():
    health -= 1
    if health == 0:
        queue_free()

func switch_direction():
    direction = direction * -1

func _on_Timer_timeout():
    switch_direction()
    $Timer.wait_time = randi() % 3 + 3
    $Timer.start()


func _on_Left_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = -1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED


func _on_Right_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = 1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED

func _on_Left_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()


func _on_Right_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()

func shoot(direction):
    var offset
    # Instance a new bullet
    var bullet = BulletResource.instance()
   
    # Set bullet direction and starting position 
    bullet.set_direction(direction)
    bullet.transform = self.transform
    offset = Vector2(33*direction, 0)
    bullet.translate(offset)
    
    # Add to world
    worldNode.add_child(bullet)
    timeToShoot = GUN_COOLDOWN
    
    $AnimatedSprite.play(\"shoot\")
    animating = true
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    $AnimatedSprite.play(\"reload\")
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    animating = false
    $AnimatedSprite.play(\"run\")
    
func _on_Area2D_body_entered(body):
    if body.is_in_group(\"player\"):
        body.take_damage((body.last_direction)*-1)
"

[sub_resource type="GDScript" id=2]
script/source = "extends KinematicBody2D

const BulletResource = preload(\"res://Scenes/NPCs/Enemies/EnemyBullet.tscn\")

const GRAVITY = 4000.0
const WALK_SPEED = 80.0
const RUN_SPEED = 150.0
const JUMP_FORCE = 1000.0
const GUN_COOLDOWN = 2.0


var horizontalSpeed
var velocity = Vector2()
# 1 = right, -1 = left
var direction = 1
var leftArea
var rightArea
var health = 1
var timeToShoot
var lockedIn = false
var worldNode
var stop = false
var animating = false
var mustReload = false
var aiming = false

func _ready():
    worldNode = get_parent().get_parent()
    horizontalSpeed = WALK_SPEED
    timeToShoot = GUN_COOLDOWN
    $Timer.start()
    $AnimatedSprite.play(\"run\")
    velocity.y = 0
    leftArea = $Left
    rightArea = $Right
    leftArea.set_process(false)
    
func stop():
    stop = true
    $Timer.stop()
    $AnimatedSprite.stop()

func _process(delta):
    if direction == 1:
        $AnimatedSprite.flip_h = false
    elif direction == -1:
        $AnimatedSprite.flip_h = true
        
    if (!stop):
        if lockedIn:
            if timeToShoot <= 0:
                shoot(direction)
        if timeToShoot > 0 && aiming:
            timeToShoot -= delta

func _physics_process(delta):    
    if (!stop && !animating):
        if !is_on_floor():
            velocity.y += delta * GRAVITY
    
        velocity.x = direction * horizontalSpeed
        # Move the character
        move_and_slide(velocity, Vector2(0, -1))

func take_damage():
    health -= 1
    if health == 0:
        queue_free()

func switch_direction():
    direction = direction * -1

func _on_Timer_timeout():
    switch_direction()
    $Timer.wait_time = randi() % 3 + 3
    $Timer.start()


func _on_Left_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = -1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED


func _on_Right_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = 1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED

func _on_Left_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()


func _on_Right_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()

func shoot(direction):
    var offset
    # Instance a new bullet
    var bullet = BulletResource.instance()
   
    # Set bullet direction and starting position 
    bullet.set_direction(direction)
    bullet.transform = self.transform
    offset = Vector2(33*direction, 0)
    bullet.translate(offset)
    
    # Add to world
    worldNode.add_child(bullet)
    timeToShoot = GUN_COOLDOWN
    
    $AnimatedSprite.play(\"shoot\")
    animating = true
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    $AnimatedSprite.play(\"reload\")
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    animating = false
    $AnimatedSprite.play(\"run\")
    
func _on_Area2D_body_entered(body):
    if body.is_in_group(\"player\"):
        body.take_damage((body.last_direction)*-1)
"

[sub_resource type="GDScript" id=3]
script/source = "extends KinematicBody2D

const BulletResource = preload(\"res://Scenes/NPCs/Enemies/EnemyBullet.tscn\")

const GRAVITY = 4000.0
const WALK_SPEED = 80.0
const RUN_SPEED = 150.0
const JUMP_FORCE = 1000.0
const GUN_COOLDOWN = 2.0


var horizontalSpeed
var velocity = Vector2()
# 1 = right, -1 = left
var direction = 1
var leftArea
var rightArea
var health = 1
var timeToShoot
var lockedIn = false
var worldNode
var stop = false
var animating = false
var mustReload = false
var aiming = false

func _ready():
    worldNode = get_parent().get_parent()
    horizontalSpeed = WALK_SPEED
    timeToShoot = GUN_COOLDOWN
    $Timer.start()
    $AnimatedSprite.play(\"run\")
    velocity.y = 0
    leftArea = $Left
    rightArea = $Right
    leftArea.set_process(false)
    
func stop():
    stop = true
    $Timer.stop()
    $AnimatedSprite.stop()

func _process(delta):
    if direction == 1:
        $AnimatedSprite.flip_h = false
    elif direction == -1:
        $AnimatedSprite.flip_h = true
        
    if (!stop):
        if lockedIn:
            if timeToShoot <= 0:
                shoot(direction)
        if timeToShoot > 0 && aiming:
            timeToShoot -= delta

func _physics_process(delta):    
    if (!stop && !animating):
        if !is_on_floor():
            velocity.y += delta * GRAVITY
    
        velocity.x = direction * horizontalSpeed
        # Move the character
        move_and_slide(velocity, Vector2(0, -1))

func take_damage():
    health -= 1
    if health == 0:
        queue_free()

func switch_direction():
    direction = direction * -1

func _on_Timer_timeout():
    switch_direction()
    $Timer.wait_time = randi() % 3 + 3
    $Timer.start()


func _on_Left_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = -1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED


func _on_Right_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = 1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED

func _on_Left_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()


func _on_Right_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()

func shoot(direction):
    var offset
    # Instance a new bullet
    var bullet = BulletResource.instance()
   
    # Set bullet direction and starting position 
    bullet.set_direction(direction)
    bullet.transform = self.transform
    offset = Vector2(33*direction, 0)
    bullet.translate(offset)
    
    # Add to world
    worldNode.add_child(bullet)
    timeToShoot = GUN_COOLDOWN
    
    $AnimatedSprite.play(\"shoot\")
    animating = true
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    $AnimatedSprite.play(\"reload\")
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    animating = false
    $AnimatedSprite.play(\"run\")
    
func _on_Area2D_body_entered(body):
    if body.is_in_group(\"player\"):
        body.take_damage((body.last_direction)*-1)
"

[sub_resource type="GDScript" id=4]
script/source = "extends KinematicBody2D

const BulletResource = preload(\"res://Scenes/NPCs/Enemies/EnemyBullet.tscn\")

const GRAVITY = 4000.0
const WALK_SPEED = 80.0
const RUN_SPEED = 150.0
const JUMP_FORCE = 1000.0
const GUN_COOLDOWN = 2.0


var horizontalSpeed
var velocity = Vector2()
# 1 = right, -1 = left
var direction = 1
var leftArea
var rightArea
var health = 1
var timeToShoot
var lockedIn = false
var worldNode
var stop = false
var animating = false
var mustReload = false
var aiming = false

func _ready():
    worldNode = get_parent().get_parent()
    horizontalSpeed = WALK_SPEED
    timeToShoot = GUN_COOLDOWN
    $Timer.start()
    $AnimatedSprite.play(\"run\")
    velocity.y = 0
    leftArea = $Left
    rightArea = $Right
    leftArea.set_process(false)
    
func stop():
    stop = true
    $Timer.stop()
    $AnimatedSprite.stop()

func _process(delta):
    if direction == 1:
        $AnimatedSprite.flip_h = false
    elif direction == -1:
        $AnimatedSprite.flip_h = true
        
    if (!stop):
        if lockedIn:
            if timeToShoot <= 0:
                shoot(direction)
        if timeToShoot > 0 && aiming:
            timeToShoot -= delta

func _physics_process(delta):    
    if (!stop && !animating):
        if !is_on_floor():
            velocity.y += delta * GRAVITY
    
        velocity.x = direction * horizontalSpeed
        # Move the character
        move_and_slide(velocity, Vector2(0, -1))

func take_damage():
    health -= 1
    if health == 0:
        queue_free()

func switch_direction():
    direction = direction * -1

func _on_Timer_timeout():
    switch_direction()
    $Timer.wait_time = randi() % 3 + 3
    $Timer.start()


func _on_Left_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = -1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED


func _on_Right_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = 1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED

func _on_Left_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()


func _on_Right_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()

func shoot(direction):
    var offset
    # Instance a new bullet
    var bullet = BulletResource.instance()
   
    # Set bullet direction and starting position 
    bullet.set_direction(direction)
    bullet.transform = self.transform
    offset = Vector2(33*direction, 0)
    bullet.translate(offset)
    
    # Add to world
    worldNode.add_child(bullet)
    timeToShoot = GUN_COOLDOWN
    
    $AnimatedSprite.play(\"shoot\")
    animating = true
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    $AnimatedSprite.play(\"reload\")
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    animating = false
    $AnimatedSprite.play(\"run\")
    
func _on_Area2D_body_entered(body):
    if body.is_in_group(\"player\"):
        body.take_damage((body.last_direction)*-1)
"

[sub_resource type="GDScript" id=5]
script/source = "extends KinematicBody2D

const BulletResource = preload(\"res://Scenes/NPCs/Enemies/EnemyBullet.tscn\")

const GRAVITY = 4000.0
const WALK_SPEED = 80.0
const RUN_SPEED = 150.0
const JUMP_FORCE = 1000.0
const GUN_COOLDOWN = 2.0


var horizontalSpeed
var velocity = Vector2()
# 1 = right, -1 = left
var direction = 1
var leftArea
var rightArea
var health = 1
var timeToShoot
var lockedIn = false
var worldNode
var stop = false
var animating = false
var mustReload = false
var aiming = false

func _ready():
    worldNode = get_parent().get_parent()
    horizontalSpeed = WALK_SPEED
    timeToShoot = GUN_COOLDOWN
    $Timer.start()
    $AnimatedSprite.play(\"run\")
    velocity.y = 0
    leftArea = $Left
    rightArea = $Right
    leftArea.set_process(false)
    
func stop():
    stop = true
    $Timer.stop()
    $AnimatedSprite.stop()

func _process(delta):
    if direction == 1:
        $AnimatedSprite.flip_h = false
    elif direction == -1:
        $AnimatedSprite.flip_h = true
        
    if (!stop):
        if lockedIn:
            if timeToShoot <= 0:
                shoot(direction)
        if timeToShoot > 0 && aiming:
            timeToShoot -= delta

func _physics_process(delta):    
    if (!stop && !animating):
        if !is_on_floor():
            velocity.y += delta * GRAVITY
    
        velocity.x = direction * horizontalSpeed
        # Move the character
        move_and_slide(velocity, Vector2(0, -1))

func take_damage():
    health -= 1
    if health == 0:
        queue_free()

func switch_direction():
    direction = direction * -1

func _on_Timer_timeout():
    switch_direction()
    $Timer.wait_time = randi() % 3 + 3
    $Timer.start()


func _on_Left_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = -1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED


func _on_Right_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = 1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED

func _on_Left_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()


func _on_Right_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()

func shoot(direction):
    var offset
    # Instance a new bullet
    var bullet = BulletResource.instance()
   
    # Set bullet direction and starting position 
    bullet.set_direction(direction)
    bullet.transform = self.transform
    offset = Vector2(33*direction, 0)
    bullet.translate(offset)
    
    # Add to world
    worldNode.add_child(bullet)
    timeToShoot = GUN_COOLDOWN
    
    $AnimatedSprite.play(\"shoot\")
    animating = true
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    $AnimatedSprite.play(\"reload\")
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    animating = false
    $AnimatedSprite.play(\"run\")
    
func _on_Area2D_body_entered(body):
    if body.is_in_group(\"player\"):
        body.take_damage((body.last_direction)*-1)
"

[sub_resource type="GDScript" id=6]
script/source = "extends KinematicBody2D

const BulletResource = preload(\"res://Scenes/NPCs/Enemies/EnemyBullet.tscn\")

const GRAVITY = 4000.0
const WALK_SPEED = 80.0
const RUN_SPEED = 150.0
const JUMP_FORCE = 1000.0
const GUN_COOLDOWN = 2.0


var horizontalSpeed
var velocity = Vector2()
# 1 = right, -1 = left
var direction = 1
var leftArea
var rightArea
var health = 1
var timeToShoot
var lockedIn = false
var worldNode
var stop = false
var animating = false
var mustReload = false
var aiming = false

func _ready():
    worldNode = get_parent().get_parent()
    horizontalSpeed = WALK_SPEED
    timeToShoot = GUN_COOLDOWN
    $Timer.start()
    $AnimatedSprite.play(\"run\")
    velocity.y = 0
    leftArea = $Left
    rightArea = $Right
    leftArea.set_process(false)
    
func stop():
    stop = true
    $Timer.stop()
    $AnimatedSprite.stop()

func _process(delta):
    if direction == 1:
        $AnimatedSprite.flip_h = false
    elif direction == -1:
        $AnimatedSprite.flip_h = true
        
    if (!stop):
        if lockedIn:
            if timeToShoot <= 0:
                shoot(direction)
        if timeToShoot > 0 && aiming:
            timeToShoot -= delta

func _physics_process(delta):    
    if (!stop && !animating):
        if !is_on_floor():
            velocity.y += delta * GRAVITY
    
        velocity.x = direction * horizontalSpeed
        # Move the character
        move_and_slide(velocity, Vector2(0, -1))

func take_damage():
    health -= 1
    if health == 0:
        queue_free()

func switch_direction():
    direction = direction * -1

func _on_Timer_timeout():
    switch_direction()
    $Timer.wait_time = randi() % 3 + 3
    $Timer.start()


func _on_Left_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = -1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED


func _on_Right_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = 1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED

func _on_Left_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()


func _on_Right_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()

func shoot(direction):
    var offset
    # Instance a new bullet
    var bullet = BulletResource.instance()
   
    # Set bullet direction and starting position 
    bullet.set_direction(direction)
    bullet.transform = self.transform
    offset = Vector2(33*direction, 0)
    bullet.translate(offset)
    
    # Add to world
    worldNode.add_child(bullet)
    timeToShoot = GUN_COOLDOWN
    
    $AnimatedSprite.play(\"shoot\")
    animating = true
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    $AnimatedSprite.play(\"reload\")
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    animating = false
    $AnimatedSprite.play(\"run\")
    
func _on_Area2D_body_entered(body):
    if body.is_in_group(\"player\"):
        body.take_damage((body.last_direction)*-1)
"

[sub_resource type="GDScript" id=7]
script/source = "extends KinematicBody2D

const BulletResource = preload(\"res://Scenes/NPCs/Enemies/EnemyBullet.tscn\")

const GRAVITY = 4000.0
const WALK_SPEED = 80.0
const RUN_SPEED = 150.0
const JUMP_FORCE = 1000.0
const GUN_COOLDOWN = 2.0


var horizontalSpeed
var velocity = Vector2()
# 1 = right, -1 = left
var direction = 1
var leftArea
var rightArea
var health = 1
var timeToShoot
var lockedIn = false
var worldNode
var stop = false
var animating = false
var mustReload = false
var aiming = false

func _ready():
    worldNode = get_parent().get_parent()
    horizontalSpeed = WALK_SPEED
    timeToShoot = GUN_COOLDOWN
    $Timer.start()
    $AnimatedSprite.play(\"run\")
    velocity.y = 0
    leftArea = $Left
    rightArea = $Right
    leftArea.set_process(false)
    
func stop():
    stop = true
    $Timer.stop()
    $AnimatedSprite.stop()

func _process(delta):
    if direction == 1:
        $AnimatedSprite.flip_h = false
    elif direction == -1:
        $AnimatedSprite.flip_h = true
        
    if (!stop):
        if lockedIn:
            if timeToShoot <= 0:
                shoot(direction)
        if timeToShoot > 0 && aiming:
            timeToShoot -= delta

func _physics_process(delta):    
    if (!stop && !animating):
        if !is_on_floor():
            velocity.y += delta * GRAVITY
    
        velocity.x = direction * horizontalSpeed
        # Move the character
        move_and_slide(velocity, Vector2(0, -1))

func take_damage():
    health -= 1
    if health == 0:
        queue_free()

func switch_direction():
    direction = direction * -1

func _on_Timer_timeout():
    switch_direction()
    $Timer.wait_time = randi() % 3 + 3
    $Timer.start()


func _on_Left_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = -1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED


func _on_Right_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = 1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED

func _on_Left_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()


func _on_Right_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()

func shoot(direction):
    var offset
    # Instance a new bullet
    var bullet = BulletResource.instance()
   
    # Set bullet direction and starting position 
    bullet.set_direction(direction)
    bullet.transform = self.transform
    offset = Vector2(33*direction, 0)
    bullet.translate(offset)
    
    # Add to world
    worldNode.add_child(bullet)
    timeToShoot = GUN_COOLDOWN
    
    $AnimatedSprite.play(\"shoot\")
    animating = true
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    $AnimatedSprite.play(\"reload\")
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    animating = false
    $AnimatedSprite.play(\"run\")
    
func _on_Area2D_body_entered(body):
    if body.is_in_group(\"player\"):
        body.take_damage((body.last_direction)*-1)
"

[sub_resource type="GDScript" id=8]
script/source = "extends KinematicBody2D

const BulletResource = preload(\"res://Scenes/NPCs/Enemies/EnemyBullet.tscn\")

const GRAVITY = 4000.0
const WALK_SPEED = 80.0
const RUN_SPEED = 150.0
const JUMP_FORCE = 1000.0
const GUN_COOLDOWN = 2.0


var horizontalSpeed
var velocity = Vector2()
# 1 = right, -1 = left
var direction = 1
var leftArea
var rightArea
var health = 1
var timeToShoot
var lockedIn = false
var worldNode
var stop = false
var animating = false
var mustReload = false
var aiming = false

func _ready():
    worldNode = get_parent().get_parent()
    horizontalSpeed = WALK_SPEED
    timeToShoot = GUN_COOLDOWN
    $Timer.start()
    $AnimatedSprite.play(\"run\")
    velocity.y = 0
    leftArea = $Left
    rightArea = $Right
    leftArea.set_process(false)
    
func stop():
    stop = true
    $Timer.stop()
    $AnimatedSprite.stop()

func _process(delta):
    if direction == 1:
        $AnimatedSprite.flip_h = false
    elif direction == -1:
        $AnimatedSprite.flip_h = true
        
    if (!stop):
        if lockedIn:
            if timeToShoot <= 0:
                shoot(direction)
        if timeToShoot > 0 && aiming:
            timeToShoot -= delta

func _physics_process(delta):    
    if (!stop && !animating):
        if !is_on_floor():
            velocity.y += delta * GRAVITY
    
        velocity.x = direction * horizontalSpeed
        # Move the character
        move_and_slide(velocity, Vector2(0, -1))

func take_damage():
    health -= 1
    if health == 0:
        queue_free()

func switch_direction():
    direction = direction * -1

func _on_Timer_timeout():
    switch_direction()
    $Timer.wait_time = randi() % 3 + 3
    $Timer.start()


func _on_Left_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = -1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED


func _on_Right_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = 1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED

func _on_Left_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()


func _on_Right_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()

func shoot(direction):
    var offset
    # Instance a new bullet
    var bullet = BulletResource.instance()
   
    # Set bullet direction and starting position 
    bullet.set_direction(direction)
    bullet.transform = self.transform
    offset = Vector2(33*direction, 0)
    bullet.translate(offset)
    
    # Add to world
    worldNode.add_child(bullet)
    timeToShoot = GUN_COOLDOWN
    
    $AnimatedSprite.play(\"shoot\")
    animating = true
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    $AnimatedSprite.play(\"reload\")
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    animating = false
    $AnimatedSprite.play(\"run\")
    
func _on_Area2D_body_entered(body):
    if body.is_in_group(\"player\"):
        body.take_damage((body.last_direction)*-1)
"

[sub_resource type="GDScript" id=9]
script/source = "extends KinematicBody2D

const BulletResource = preload(\"res://Scenes/NPCs/Enemies/EnemyBullet.tscn\")

const GRAVITY = 4000.0
const WALK_SPEED = 80.0
const RUN_SPEED = 150.0
const JUMP_FORCE = 1000.0
const GUN_COOLDOWN = 2.0


var horizontalSpeed
var velocity = Vector2()
# 1 = right, -1 = left
var direction = 1
var leftArea
var rightArea
var health = 1
var timeToShoot
var lockedIn = false
var worldNode
var stop = false
var animating = false
var mustReload = false
var aiming = false

func _ready():
    worldNode = get_parent().get_parent()
    horizontalSpeed = WALK_SPEED
    timeToShoot = GUN_COOLDOWN
    $Timer.start()
    $AnimatedSprite.play(\"run\")
    velocity.y = 0
    leftArea = $Left
    rightArea = $Right
    leftArea.set_process(false)
    
func stop():
    stop = true
    $Timer.stop()
    $AnimatedSprite.stop()

func _process(delta):
    if direction == 1:
        $AnimatedSprite.flip_h = false
    elif direction == -1:
        $AnimatedSprite.flip_h = true
        
    if (!stop):
        if lockedIn:
            if timeToShoot <= 0:
                shoot(direction)
        if timeToShoot > 0 && aiming:
            timeToShoot -= delta

func _physics_process(delta):    
    if (!stop && !animating):
        if !is_on_floor():
            velocity.y += delta * GRAVITY
    
        velocity.x = direction * horizontalSpeed
        # Move the character
        move_and_slide(velocity, Vector2(0, -1))

func take_damage():
    health -= 1
    if health == 0:
        queue_free()

func switch_direction():
    direction = direction * -1

func _on_Timer_timeout():
    switch_direction()
    $Timer.wait_time = randi() % 3 + 3
    $Timer.start()


func _on_Left_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = -1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED


func _on_Right_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = 1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED

func _on_Left_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()


func _on_Right_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()

func shoot(direction):
    var offset
    # Instance a new bullet
    var bullet = BulletResource.instance()
   
    # Set bullet direction and starting position 
    bullet.set_direction(direction)
    bullet.transform = self.transform
    offset = Vector2(33*direction, 0)
    bullet.translate(offset)
    
    # Add to world
    worldNode.add_child(bullet)
    timeToShoot = GUN_COOLDOWN
    
    $AnimatedSprite.play(\"shoot\")
    animating = true
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    $AnimatedSprite.play(\"reload\")
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    animating = false
    $AnimatedSprite.play(\"run\")
    
func _on_Area2D_body_entered(body):
    if body.is_in_group(\"player\"):
        body.take_damage((body.last_direction)*-1)
"

[sub_resource type="GDScript" id=10]
script/source = "extends KinematicBody2D

const BulletResource = preload(\"res://Scenes/NPCs/Enemies/EnemyBullet.tscn\")

const GRAVITY = 4000.0
const WALK_SPEED = 80.0
const RUN_SPEED = 150.0
const JUMP_FORCE = 1000.0
const GUN_COOLDOWN = 2.0


var horizontalSpeed
var velocity = Vector2()
# 1 = right, -1 = left
var direction = 1
var leftArea
var rightArea
var health = 1
var timeToShoot
var lockedIn = false
var worldNode
var stop = false
var animating = false
var mustReload = false
var aiming = false

func _ready():
    worldNode = get_parent().get_parent()
    horizontalSpeed = WALK_SPEED
    timeToShoot = GUN_COOLDOWN
    $Timer.start()
    $AnimatedSprite.play(\"run\")
    velocity.y = 0
    leftArea = $Left
    rightArea = $Right
    leftArea.set_process(false)
    
func stop():
    stop = true
    $Timer.stop()
    $AnimatedSprite.stop()

func _process(delta):
    if direction == 1:
        $AnimatedSprite.flip_h = false
    elif direction == -1:
        $AnimatedSprite.flip_h = true
        
    if (!stop):
        if lockedIn:
            if timeToShoot <= 0:
                shoot(direction)
        if timeToShoot > 0 && aiming:
            timeToShoot -= delta

func _physics_process(delta):    
    if (!stop && !animating):
        if !is_on_floor():
            velocity.y += delta * GRAVITY
    
        velocity.x = direction * horizontalSpeed
        # Move the character
        move_and_slide(velocity, Vector2(0, -1))

func take_damage():
    health -= 1
    if health == 0:
        queue_free()

func switch_direction():
    direction = direction * -1

func _on_Timer_timeout():
    switch_direction()
    $Timer.wait_time = randi() % 3 + 3
    $Timer.start()


func _on_Left_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = -1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED


func _on_Right_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = 1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED

func _on_Left_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()


func _on_Right_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()

func shoot(direction):
    var offset
    # Instance a new bullet
    var bullet = BulletResource.instance()
   
    # Set bullet direction and starting position 
    bullet.set_direction(direction)
    bullet.transform = self.transform
    offset = Vector2(33*direction, 0)
    bullet.translate(offset)
    
    # Add to world
    worldNode.add_child(bullet)
    timeToShoot = GUN_COOLDOWN
    
    $AnimatedSprite.play(\"shoot\")
    animating = true
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    $AnimatedSprite.play(\"reload\")
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    animating = false
    $AnimatedSprite.play(\"run\")
    
func _on_Area2D_body_entered(body):
    if body.is_in_group(\"player\"):
        body.take_damage((body.last_direction)*-1)
"

[sub_resource type="GDScript" id=11]
script/source = "extends KinematicBody2D

const BulletResource = preload(\"res://Scenes/NPCs/Enemies/EnemyBullet.tscn\")

const GRAVITY = 4000.0
const WALK_SPEED = 80.0
const RUN_SPEED = 150.0
const JUMP_FORCE = 1000.0
const GUN_COOLDOWN = 2.0


var horizontalSpeed
var velocity = Vector2()
# 1 = right, -1 = left
var direction = 1
var leftArea
var rightArea
var health = 1
var timeToShoot
var lockedIn = false
var worldNode
var stop = false
var animating = false
var mustReload = false
var aiming = false

func _ready():
    worldNode = get_parent().get_parent()
    horizontalSpeed = WALK_SPEED
    timeToShoot = GUN_COOLDOWN
    $Timer.start()
    $AnimatedSprite.play(\"run\")
    velocity.y = 0
    leftArea = $Left
    rightArea = $Right
    leftArea.set_process(false)
    
func stop():
    stop = true
    $Timer.stop()
    $AnimatedSprite.stop()

func _process(delta):
    if direction == 1:
        $AnimatedSprite.flip_h = false
    elif direction == -1:
        $AnimatedSprite.flip_h = true
        
    if (!stop):
        if lockedIn:
            if timeToShoot <= 0:
                shoot(direction)
        if timeToShoot > 0 && aiming:
            timeToShoot -= delta

func _physics_process(delta):    
    if (!stop && !animating):
        if !is_on_floor():
            velocity.y += delta * GRAVITY
    
        velocity.x = direction * horizontalSpeed
        # Move the character
        move_and_slide(velocity, Vector2(0, -1))

func take_damage():
    health -= 1
    if health == 0:
        queue_free()

func switch_direction():
    direction = direction * -1

func _on_Timer_timeout():
    switch_direction()
    $Timer.wait_time = randi() % 3 + 3
    $Timer.start()


func _on_Left_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = -1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED


func _on_Right_body_entered(body):
    if(body.is_in_group(\"player\")):
        $Timer.stop()
        direction = 1
        lockedIn = true
        aiming = true
        horizontalSpeed = RUN_SPEED

func _on_Left_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()


func _on_Right_body_exited(body):
    if(body.is_in_group(\"player\")):
        horizontalSpeed = WALK_SPEED
        lockedIn = false
        $Timer.start()

func shoot(direction):
    var offset
    # Instance a new bullet
    var bullet = BulletResource.instance()
   
    # Set bullet direction and starting position 
    bullet.set_direction(direction)
    bullet.transform = self.transform
    offset = Vector2(33*direction, 0)
    bullet.translate(offset)
    
    # Add to world
    worldNode.add_child(bullet)
    timeToShoot = GUN_COOLDOWN
    
    $AnimatedSprite.play(\"shoot\")
    animating = true
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    $AnimatedSprite.play(\"reload\")
    yield(get_node(\"AnimatedSprite\"), \"animation_finished\")    
    animating = false
    $AnimatedSprite.play(\"run\")
    
func _on_Area2D_body_entered(body):
    if body.is_in_group(\"player\"):
        body.take_damage((body.last_direction)*-1)
"

[node name="World" instance=ExtResource( 1 )]
objDuration = 11

[node name="Enemy" parent="Enemies" index="0" instance=ExtResource( 2 )]
position = Vector2( 508.526, -377.987 )
script = SubResource( 1 )

[node name="Enemy2" parent="Enemies" index="1" instance=ExtResource( 2 )]
position = Vector2( 888.885, 33.462 )
script = SubResource( 2 )

[node name="Enemy3" parent="Enemies" index="2" instance=ExtResource( 2 )]
position = Vector2( 2421.87, 36.5996 )
script = SubResource( 3 )

[node name="Enemy12" parent="Enemies" index="3" instance=ExtResource( 2 )]
position = Vector2( 2362.92, 37.6522 )
script = SubResource( 3 )

[node name="Enemy4" parent="Enemies" index="4" instance=ExtResource( 2 )]
position = Vector2( 265, 36.506 )
script = SubResource( 4 )

[node name="Enemy5" parent="Enemies" index="5" instance=ExtResource( 2 )]
position = Vector2( -261.422, 35.2137 )
script = SubResource( 5 )

[node name="Enemy6" parent="Enemies" index="6" instance=ExtResource( 2 )]
position = Vector2( 203.739, 40.2816 )
script = SubResource( 6 )

[node name="Enemy7" parent="Enemies" index="7" instance=ExtResource( 2 )]
position = Vector2( 1027.53, 36.7839 )
script = SubResource( 7 )

[node name="Enemy8" parent="Enemies" index="8" instance=ExtResource( 2 )]
position = Vector2( 825.664, -380.207 )
script = SubResource( 8 )

[node name="Enemy9" parent="Enemies" index="9" instance=ExtResource( 2 )]
position = Vector2( 1514.61, 36.0711 )
script = SubResource( 9 )

[node name="Enemy10" parent="Enemies" index="10" instance=ExtResource( 2 )]
position = Vector2( 1124.69, 29.5807 )
script = SubResource( 10 )

[node name="Enemy11" parent="Enemies" index="11" instance=ExtResource( 2 )]
position = Vector2( 1209.96, 36.4738 )
script = SubResource( 11 )

[node name="Girl" parent="Enemies" index="12" instance=ExtResource( 3 )]
position = Vector2( 3756.58, -3.80215 )

[node name="TileMap" parent="Environment" index="0" instance=ExtResource( 4 )]
collision_mask = 3
tile_data = PoolIntArray( -1179512, 0, 5, -1113976, 0, 65542, -1113975, 0, 196609, -1113974, 0, 196609, -1113973, 0, 7, -1048437, 0, 65542, -1048436, 0, 196609, -1048435, 0, 7, -917520, 0, 5, -982899, 0, 65542, -982898, 0, 196609, -982897, 0, 7, -851984, 0, 65541, -917435, 0, 196608, -917434, 0, 10, -917433, 0, 65536, -917432, 0, 65536, -917431, 0, 65536, -917430, 0, 65536, -917429, 0, 65536, -917428, 0, 65536, -917427, 0, 65536, -917426, 0, 65536, -917425, 0, 65536, -917424, 0, 65536, -917423, 0, 65536, -917422, 0, 2, -917361, 0, 131077, -786448, 0, 65541, -851898, 0, 65537, -851897, 0, 4, -851896, 0, 196619, -851895, 0, 196619, -851894, 0, 196619, -851893, 0, 196619, -851892, 0, 196619, -851891, 0, 196619, -851890, 0, 196619, -851889, 0, 196619, -851888, 0, 196619, -851887, 0, 196619, -851886, 0, 131074, -851824, 0, 5, -720912, 0, 65541, -786361, 0, 65537, -786360, 0, 4, -786359, 0, 196619, -786358, 0, 196619, -786357, 0, 196619, -786356, 0, 196619, -786355, 0, 196619, -786354, 0, 196619, -786353, 0, 196619, -786352, 0, 196619, -786351, 0, 196619, -786350, 0, 131074, -786288, 0, 65541, -655376, 0, 65541, -655362, 0, 1, -655361, 0, 65536, -720896, 0, 9, -720895, 0, 196609, -720894, 0, 196609, -720893, 0, 131076, -720892, 0, 196609, -720891, 0, 196609, -720890, 0, 196609, -720889, 0, 196609, -720888, 0, 196609, -720887, 0, 196609, -720886, 0, 131076, -720885, 0, 196609, -720884, 0, 196609, -720883, 0, 196609, -720882, 0, 196609, -720881, 0, 196609, -720880, 0, 196609, -720879, 0, 196609, -720878, 0, 196609, -720877, 0, 131076, -720876, 0, 196609, -720875, 0, 196609, -720874, 0, 196609, -720873, 0, 196609, -720872, 0, 196609, -720871, 0, 196609, -720870, 0, 196609, -720869, 0, 196609, -720868, 0, 7, -720824, 0, 65537, -720823, 0, 4, -720822, 0, 196619, -720821, 0, 196619, -720820, 0, 196619, -720819, 0, 196619, -720818, 0, 196619, -720817, 0, 196619, -720816, 0, 196619, -720815, 0, 196619, -720814, 0, 131074, -720752, 0, 65541, -589840, 0, 65541, -589826, 0, 131073, -589825, 0, 3, -655360, 0, 65538, -655357, 0, 65541, -655350, 0, 65541, -655341, 0, 65541, -655332, 0, 65542, -655331, 0, 196609, -655330, 0, 10, -655329, 0, 2, -655287, 0, 65537, -655286, 0, 4, -655285, 0, 196619, -655284, 0, 196619, -655283, 0, 196619, -655282, 0, 196619, -655281, 0, 196619, -655280, 0, 196619, -655279, 0, 196619, -655278, 0, 131074, -655216, 0, 65541, -524304, 0, 65541, -524291, 0, 6, -524290, 0, 65544, -524289, 0, 65538, -589821, 0, 131077, -589814, 0, 65541, -589805, 0, 65541, -589794, 0, 65537, -589793, 0, 65547, -589792, 0, 196609, -589791, 0, 196609, -589790, 0, 7, -589750, 0, 65537, -589749, 0, 4, -589748, 0, 196619, -589747, 0, 196619, -589746, 0, 196619, -589745, 0, 196619, -589744, 0, 196619, -589743, 0, 196619, -589742, 0, 131074, -589680, 0, 65541, -458768, 0, 65541, -458757, 0, 196608, -458756, 0, 196609, -458755, 0, 65543, -524278, 0, 65541, -524269, 0, 65541, -524254, 0, 131077, -524236, 0, 196608, -524235, 0, 196609, -524234, 0, 196610, -524213, 0, 65537, -524212, 0, 4, -524211, 0, 196619, -524210, 0, 196619, -524209, 0, 196619, -524208, 0, 196619, -524207, 0, 196619, -524206, 0, 131074, -524144, 0, 65541, -393232, 0, 65541, -458742, 0, 131077, -458733, 0, 65541, -458717, 0, 196608, -458716, 0, 196609, -458715, 0, 10, -458714, 0, 65536, -458713, 0, 2, -458706, 0, 196613, -458676, 0, 65537, -458675, 0, 4, -458674, 0, 196619, -458673, 0, 196619, -458672, 0, 196619, -458671, 0, 196619, -458670, 0, 131074, -458609, 0, 6, -458608, 0, 65543, -327696, 0, 65541, -327687, 0, 5, -393197, 0, 131077, -393179, 0, 65537, -393178, 0, 4, -393177, 0, 131074, -393139, 0, 65537, -393138, 0, 4, -393137, 0, 196619, -393136, 0, 196619, -393135, 0, 196619, -393134, 0, 131074, -393073, 0, 65541, -262160, 0, 65541, -262151, 0, 65541, -327642, 0, 65537, -327641, 0, 65538, -327629, 0, 1, -327628, 0, 65536, -327627, 0, 9, -327626, 0, 196609, -327625, 0, 196609, -327624, 0, 196610, -327602, 0, 65537, -327601, 0, 4, -327600, 0, 196619, -327599, 0, 196619, -327598, 0, 131074, -327537, 0, 65541, -196624, 0, 65541, -196618, 0, 196608, -196617, 0, 196609, -196616, 0, 196609, -196615, 0, 196612, -262093, 0, 131073, -262092, 0, 196619, -262091, 0, 131074, -262065, 0, 65537, -262064, 0, 4, -262063, 0, 196619, -262062, 0, 131074, -262001, 0, 65541, -131088, 0, 65541, -131079, 0, 65541, -196601, 0, 196613, -196568, 0, 1, -196567, 0, 65536, -196566, 0, 2, -196557, 0, 131073, -196556, 0, 196619, -196555, 0, 131074, -196528, 0, 65537, -196527, 0, 4, -196526, 0, 131074, -196465, 0, 65541, -65552, 0, 8, -65551, 0, 2, -65543, 0, 65541, -131057, 0, 5, -131032, 0, 131073, -131031, 0, 196619, -131030, 0, 131074, -131021, 0, 131073, -131020, 0, 196619, -131019, 0, 131074, -130991, 0, 65537, -130990, 0, 65545, -130929, 0, 65541, -16, 0, 131073, -15, 0, 65539, -14, 0, 65536, -13, 0, 2, -7, 0, 131077, -65534, 0, 196613, -65522, 0, 1, -65521, 0, 131082, -65520, 0, 2, -65496, 0, 65537, -65495, 0, 131072, -65494, 0, 65538, -65485, 0, 65537, -65484, 0, 131072, -65483, 0, 65538, -65454, 0, 131077, -65393, 0, 65541, 65520, 0, 131073, 65521, 0, 196619, 65522, 0, 196619, 65523, 0, 131074, 12, 0, 1, 13, 0, 65536, 14, 0, 65540, 15, 0, 196619, 16, 0, 131074, 126, 0, 6, 127, 0, 196609, 128, 0, 196609, 129, 0, 196609, 130, 0, 196610, 142, 0, 6, 143, 0, 65543, 131056, 0, 131073, 131057, 0, 196619, 131058, 0, 196619, 131059, 0, 131074, 65547, 0, 1, 65548, 0, 65540, 65549, 0, 196619, 65550, 0, 196619, 65551, 0, 196619, 65552, 0, 131074, 65595, 0, 1, 65596, 0, 2, 65657, 0, 196608, 65658, 0, 196609, 65659, 0, 196609, 65660, 0, 196609, 65661, 0, 196609, 65662, 0, 65543, 65678, 0, 65541, 196592, 0, 65537, 196593, 0, 131072, 196594, 0, 131072, 196595, 0, 65547, 196596, 0, 196609, 196597, 0, 196609, 196598, 0, 196609, 196599, 0, 196609, 196600, 0, 196609, 196601, 0, 196609, 196602, 0, 196609, 196603, 0, 196609, 196604, 0, 196609, 196605, 0, 196609, 196606, 0, 196609, 196607, 0, 196609, 131072, 0, 196609, 131073, 0, 196609, 131074, 0, 196609, 131075, 0, 196609, 131076, 0, 196609, 131077, 0, 196609, 131078, 0, 196609, 131079, 0, 196609, 131080, 0, 196609, 131081, 0, 196609, 131082, 0, 196609, 131083, 0, 65544, 131084, 0, 131072, 131085, 0, 131072, 131086, 0, 131072, 131087, 0, 131072, 131088, 0, 65547, 131089, 0, 196609, 131090, 0, 196609, 131091, 0, 196609, 131092, 0, 196609, 131093, 0, 196609, 131094, 0, 196609, 131095, 0, 196609, 131096, 0, 196609, 131097, 0, 196609, 131098, 0, 196609, 131099, 0, 196609, 131100, 0, 196609, 131101, 0, 196609, 131102, 0, 196609, 131103, 0, 196609, 131104, 0, 196609, 131105, 0, 196609, 131106, 0, 196609, 131107, 0, 196609, 131108, 0, 196609, 131109, 0, 196609, 131110, 0, 196609, 131111, 0, 196609, 131112, 0, 196609, 131113, 0, 196609, 131114, 0, 196609, 131115, 0, 196609, 131116, 0, 196609, 131117, 0, 196609, 131118, 0, 196609, 131119, 0, 196609, 131120, 0, 196609, 131121, 0, 196609, 131122, 0, 196609, 131123, 0, 196609, 131124, 0, 196609, 131125, 0, 196609, 131126, 0, 196609, 131127, 0, 196609, 131128, 0, 196609, 131129, 0, 196609, 131130, 0, 196609, 131131, 0, 65544, 131132, 0, 65547, 131133, 0, 196609, 131134, 0, 196609, 131135, 0, 196609, 131136, 0, 196609, 131137, 0, 196609, 131138, 0, 196609, 131139, 0, 196609, 131140, 0, 196609, 131141, 0, 196609, 131142, 0, 196609, 131143, 0, 196609, 131144, 0, 196609, 131145, 0, 196609, 131146, 0, 196609, 131147, 0, 196609, 131148, 0, 196609, 131149, 0, 196609, 131150, 0, 196609, 131151, 0, 196609, 131152, 0, 196609, 131153, 0, 196609, 131154, 0, 196609, 131155, 0, 196609, 131156, 0, 196609, 131157, 0, 10, 131158, 0, 2, 131189, 0, 196608, 131190, 0, 196609, 131191, 0, 196609, 131192, 0, 196610, 131214, 0, 65541, 196693, 0, 131073, 196694, 0, 131074, 196749, 0, 6, 196750, 0, 65543, 262229, 0, 131073, 262230, 0, 131074, 262285, 0, 131077, 327765, 0, 131073, 327766, 0, 131074, 327820, 0, 5, 393301, 0, 131073, 393302, 0, 131074, 393355, 0, 6, 393356, 0, 65543, 458837, 0, 131073, 458838, 0, 131074, 458891, 0, 131077, 524373, 0, 131073, 524374, 0, 131074, 524425, 0, 6, 524426, 0, 196610, 589909, 0, 131073, 589910, 0, 131074, 589960, 0, 6, 589961, 0, 65543, 655445, 0, 131073, 655446, 0, 131074, 655494, 0, 196608, 655495, 0, 196609, 655496, 0, 65543, 720981, 0, 131073, 720982, 0, 131074, 721019, 0, 196608, 721020, 0, 196609, 721021, 0, 196609, 721022, 0, 196609, 721023, 0, 196609, 721024, 0, 196609, 721025, 0, 196609, 721026, 0, 196609, 721027, 0, 196609, 721028, 0, 196609, 721029, 0, 196610, 786517, 0, 65537, 786518, 0, 65547, 786519, 0, 196609, 786520, 0, 196609, 786521, 0, 196609, 786522, 0, 196609, 786523, 0, 196609, 786524, 0, 196609, 786525, 0, 196609, 786526, 0, 196609, 786527, 0, 196609, 786528, 0, 196609, 786529, 0, 196609, 786530, 0, 196609, 786531, 0, 196609, 786532, 0, 196609, 786533, 0, 196609, 786534, 0, 196609, 786535, 0, 196609, 786536, 0, 196609, 786537, 0, 196609, 786538, 0, 196609, 786539, 0, 196609, 786540, 0, 196609, 786541, 0, 196609, 786542, 0, 196609, 786543, 0, 196609, 786544, 0, 196609, 786545, 0, 196609, 786546, 0, 196609, 786547, 0, 196609, 786548, 0, 196609, 786549, 0, 196609, 786550, 0, 196609, 786551, 0, 196609, 786552, 0, 196609, 786553, 0, 196609, 786554, 0, 196610 )

[node name="ObjectiveArea" parent="." index="2"]
editor/display_folded = false
position = Vector2( 2782.79, 4.42615 )

[node name="The_Pope" parent="President" index="0" instance=ExtResource( 5 )]
position = Vector2( 3238.53, 35.7968 )

[node name="ObjectiveTimer" parent="." index="4"]
wait_time = 15.0

[node name="ColorRect" parent="CanvasLayer" index="0"]
visible = false

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="." index="7"]
stream = ExtResource( 6 )
autoplay = true

[node name="MovingPlatform" parent="." index="8" instance=ExtResource( 7 )]
position = Vector2( 3242.1, 114.69 )
finalPos = 89
duration = 11
